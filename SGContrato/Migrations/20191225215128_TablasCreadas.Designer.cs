// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using SGContrato.Models;

namespace SGContrato.Migrations
{
    [DbContext(typeof(MyDBContext))]
    [Migration("20191225215128_TablasCreadas")]
    partial class TablasCreadas
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            modelBuilder.Entity("SGContrato.Models.acta_entrega_recepcion", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("contratoID");

                    b.Property<DateTime>("dt_fechaActa");

                    b.Property<DateTime>("dt_fechaUltimoCambio");

                    b.Property<int>("qn_tipoActa");

                    b.Property<string>("txt_archivoActa");

                    b.Property<string>("txt_codigoActa");

                    b.HasKey("ID");

                    b.HasIndex("contratoID");

                    b.ToTable("acta");
                });

            modelBuilder.Entity("SGContrato.Models.contrato", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("bol_recurrencia");

                    b.Property<DateTime>("dt_fechaFin");

                    b.Property<DateTime>("dt_fechaInicio");

                    b.Property<DateTime>("dt_fechaSuscripcion");

                    b.Property<DateTime>("dt_fechaUltimoCambio");

                    b.Property<int>("qn_proveedor");

                    b.Property<int>("qn_tipoContrato");

                    b.Property<int>("qn_tipoProceso");

                    b.Property<int>("qn_unidadConsolidadora");

                    b.Property<int>("qn_vigenciaContrato");

                    b.Property<string>("txt_nombreAdministrador");

                    b.Property<string>("txt_nombreDelegado");

                    b.Property<string>("txt_nombreTecnicoExterno");

                    b.Property<string>("txt_numProceso");

                    b.Property<string>("txt_objetoContratacion");

                    b.Property<double>("vm_montoAdjudicado");

                    b.HasKey("ID");

                    b.ToTable("contrato");
                });

            modelBuilder.Entity("SGContrato.Models.entregable", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("contratoID");

                    b.Property<DateTime>("dt_fechaEntregable");

                    b.Property<DateTime>("dt_fechaUltimoCambio");

                    b.Property<int>("qn_cantidadEntregable");

                    b.Property<int>("qn_tipoEntregable");

                    b.Property<string>("txt_archivoEntregable");

                    b.Property<string>("txt_descripcionEntregable");

                    b.HasKey("ID");

                    b.HasIndex("contratoID");

                    b.ToTable("entregable");
                });

            modelBuilder.Entity("SGContrato.Models.fechaModificado", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("dt_fechaActual");

                    b.Property<DateTime>("dt_fechaAnterior");

                    b.Property<int>("modificacionID");

                    b.HasKey("ID");

                    b.HasIndex("modificacionID")
                        .IsUnique();

                    b.ToTable("fechaModificado");
                });

            modelBuilder.Entity("SGContrato.Models.formaPago", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("contratoID");

                    b.Property<DateTime>("dt_fechaUltimoCambio");

                    b.Property<int>("qn_tipoPago");

                    b.Property<string>("txt_archivoPago");

                    b.HasKey("ID");

                    b.HasIndex("contratoID")
                        .IsUnique();

                    b.ToTable("formaPago");
                });

            modelBuilder.Entity("SGContrato.Models.garantia", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("contratoID");

                    b.Property<DateTime>("dt_fechaUltimoCambio");

                    b.Property<DateTime>("dt_finGarantia");

                    b.Property<DateTime>("dt_inicioGarantia");

                    b.Property<int>("qn_tipoGarantia");

                    b.Property<string>("txt_archivoGarantia");

                    b.Property<string>("txt_codigoGarantia");

                    b.Property<string>("txt_proveedorGarantia");

                    b.Property<double>("vm_valorGarantia");

                    b.HasKey("ID");

                    b.HasIndex("contratoID");

                    b.ToTable("garantia");
                });

            modelBuilder.Entity("SGContrato.Models.informe", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("contratoID");

                    b.Property<DateTime>("dt_fechaInforme");

                    b.Property<DateTime>("dt_fechaUltimoCambio");

                    b.Property<int>("qn_tipoInforme");

                    b.Property<string>("txt_archivoInforme");

                    b.Property<string>("txt_codigoInforme");

                    b.HasKey("ID");

                    b.HasIndex("contratoID");

                    b.ToTable("informe");
                });

            modelBuilder.Entity("SGContrato.Models.modificacion", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("contratoID");

                    b.Property<DateTime>("dt_fechaUltimoCambio");

                    b.Property<int>("qn_tipoModificacion");

                    b.Property<string>("txt_motivoModificacion");

                    b.HasKey("ID");

                    b.HasIndex("contratoID");

                    b.ToTable("modificacion");
                });

            modelBuilder.Entity("SGContrato.Models.multa", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("contratoID");

                    b.Property<DateTime>("dt_fechaMulta");

                    b.Property<DateTime>("dt_fechaUltimoCambio");

                    b.Property<int>("qn_tipoMulta");

                    b.Property<string>("txt_codigoInforme");

                    b.Property<string>("txt_motivoMulta");

                    b.Property<double>("vm_montoMulta");

                    b.HasKey("ID");

                    b.HasIndex("contratoID");

                    b.ToTable("multa");
                });

            modelBuilder.Entity("SGContrato.Models.pago", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("dt_fechaUltimoCambio");

                    b.Property<DateTime>("dt_realPago");

                    b.Property<DateTime>("dt_tentativaPago");

                    b.Property<int>("formaPagoID");

                    b.Property<float>("qn_porcentajePago");

                    b.Property<string>("txt_comprobantePago");

                    b.Property<double>("vm_montoPago");

                    b.HasKey("ID");

                    b.HasIndex("formaPagoID");

                    b.ToTable("pago");
                });

            modelBuilder.Entity("SGContrato.Models.Seccion", b =>
                {
                    b.Property<int>("seccionID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("txt_detalleSeccion");

                    b.Property<string>("txt_nombreSeccion");

                    b.HasKey("seccionID");

                    b.ToTable("Seccion");
                });

            modelBuilder.Entity("SGContrato.Models.Tipo", b =>
                {
                    b.Property<int>("tipoID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("seccionId");

                    b.Property<string>("txt_detalleTipo");

                    b.Property<string>("txt_nombreTipo");

                    b.HasKey("tipoID");

                    b.HasIndex("seccionId");

                    b.ToTable("Tipo");
                });

            modelBuilder.Entity("SGContrato.Models.valorModificado", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("modificacionID");

                    b.Property<double>("vm_valorActual");

                    b.Property<double>("vm_valorAnterior");

                    b.HasKey("ID");

                    b.HasIndex("modificacionID")
                        .IsUnique();

                    b.ToTable("valorModificado");
                });

            modelBuilder.Entity("SGContrato.Models.vencimientos", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("contratoID");

                    b.Property<DateTime>("dt_fechaUltimoCambio");

                    b.Property<DateTime>("dt_fechaVencimiento");

                    b.Property<int>("qn_diasAnticipacion");

                    b.Property<int>("qn_frecuenciaAnticipacion");

                    b.HasKey("ID");

                    b.HasIndex("contratoID");

                    b.ToTable("vencimientos");
                });

            modelBuilder.Entity("SGContrato.Models.acta_entrega_recepcion", b =>
                {
                    b.HasOne("SGContrato.Models.contrato")
                        .WithMany("actas")
                        .HasForeignKey("contratoID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SGContrato.Models.entregable", b =>
                {
                    b.HasOne("SGContrato.Models.contrato")
                        .WithMany("entregables")
                        .HasForeignKey("contratoID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SGContrato.Models.fechaModificado", b =>
                {
                    b.HasOne("SGContrato.Models.modificacion")
                        .WithOne("fechaModificado")
                        .HasForeignKey("SGContrato.Models.fechaModificado", "modificacionID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SGContrato.Models.formaPago", b =>
                {
                    b.HasOne("SGContrato.Models.contrato")
                        .WithOne("formaPago")
                        .HasForeignKey("SGContrato.Models.formaPago", "contratoID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SGContrato.Models.garantia", b =>
                {
                    b.HasOne("SGContrato.Models.contrato")
                        .WithMany("garantias")
                        .HasForeignKey("contratoID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SGContrato.Models.informe", b =>
                {
                    b.HasOne("SGContrato.Models.contrato")
                        .WithMany("informes")
                        .HasForeignKey("contratoID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SGContrato.Models.modificacion", b =>
                {
                    b.HasOne("SGContrato.Models.contrato")
                        .WithMany("modificaciones")
                        .HasForeignKey("contratoID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SGContrato.Models.multa", b =>
                {
                    b.HasOne("SGContrato.Models.contrato")
                        .WithMany("multas")
                        .HasForeignKey("contratoID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SGContrato.Models.pago", b =>
                {
                    b.HasOne("SGContrato.Models.formaPago")
                        .WithMany("pagos")
                        .HasForeignKey("formaPagoID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SGContrato.Models.Tipo", b =>
                {
                    b.HasOne("SGContrato.Models.Seccion", "Seccion")
                        .WithMany("Tipos")
                        .HasForeignKey("seccionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SGContrato.Models.valorModificado", b =>
                {
                    b.HasOne("SGContrato.Models.modificacion")
                        .WithOne("valorModificado")
                        .HasForeignKey("SGContrato.Models.valorModificado", "modificacionID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SGContrato.Models.vencimientos", b =>
                {
                    b.HasOne("SGContrato.Models.contrato")
                        .WithMany("vencimientos")
                        .HasForeignKey("contratoID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
